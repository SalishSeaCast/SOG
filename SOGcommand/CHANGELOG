Changelog
---------

Next Release
------------

* Implement handling for average/historical forcing data,
  and document the process.

* Add an API for the :command:`SOG run` command so that it can be used by
  other Python packages (e.g. SoG-bloomcast) without the overhead of
  launching a subprocess.


v1.1
~~~~

* Implement handling for optional parameters in infile, and add
  optional parameters for northern return flow influence, and forcing
  quantities variations to infile schemas.


v1.1c1
~~~~

* Add :option:`--editfile` to :command:`SOG run` command to allow YAML
  infile snippets to be merged into the base YAML infile.

* Outfile now defaults to ./INFILE.out; i.e. outfile goes to the directory
  that the run is started in by default, not the directory the infile is in.
  Use the :option:`--output` option to specify the outfile path/name if
  something other than the default is required.

* Add :option:`--legacy-infile` option to :command:`SOG run` command to
  allow legacy, Fortran-style infiles to be used.


v1.0
~~~~

* User docs in repository and rendered at
  http://eos.ubc.ca/~sallen/SOG-docs/SOGcommand

* Installation docs in repository and rendered at
  http://eos.ubc.ca/~sallen/SOG-docs/quickstart.html#sog-command-processor


v1.0c1
~~~~~~

* :command:`SOG run` command to run SOG with a given infile and
  various options. See :command:`SOG help run` for details.

* SOG command processor framework based on:

  * stdlib cmd module for first level command handling, help text,
    etc.
  * argparse module for argument and option handling for individual
    commands. argparse is a 3rd party library for Python 2.6, in
    stdlib for Python >=2.7 and >=3.2.
